'use strict'; // code generated by pbf v3.2.1

// WidevinePsshData ========================================

var WidevinePsshData = exports.WidevinePsshData = {};

WidevinePsshData.read = function (pbf, end) {
    return pbf.readFields(WidevinePsshData._readField, {algorithm: 0, key_id: [], provider: "", content_id: null, track_type: "", policy: "", crypto_period_index: 0, grouped_license: null}, end);
};
WidevinePsshData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.algorithm = pbf.readVarint();
    else if (tag === 2) obj.key_id.push(pbf.readBytes());
    else if (tag === 3) obj.provider = pbf.readString();
    else if (tag === 4) obj.content_id = pbf.readBytes();
    else if (tag === 5) obj.track_type = pbf.readString();
    else if (tag === 6) obj.policy = pbf.readString();
    else if (tag === 7) obj.crypto_period_index = pbf.readVarint();
    else if (tag === 8) obj.grouped_license = pbf.readBytes();
};
WidevinePsshData.write = function (obj, pbf) {
    if (obj.algorithm) pbf.writeVarintField(1, obj.algorithm);
    if (obj.key_id) for (var i = 0; i < obj.key_id.length; i++) pbf.writeBytesField(2, obj.key_id[i]);
    if (obj.provider) pbf.writeStringField(3, obj.provider);
    if (obj.content_id) pbf.writeBytesField(4, obj.content_id);
    if (obj.track_type) pbf.writeStringField(5, obj.track_type);
    if (obj.policy) pbf.writeStringField(6, obj.policy);
    if (obj.crypto_period_index) pbf.writeVarintField(7, obj.crypto_period_index);
    if (obj.grouped_license) pbf.writeBytesField(8, obj.grouped_license);
};

WidevinePsshData.Algorithm = {
    "UNENCRYPTED": {
        "value": 0,
        "options": {}
    },
    "AESCTR": {
        "value": 1,
        "options": {}
    }
};
